import os
from fastapi import APIRouter, Request
from fastapi.responses import FileResponse
from app.core.schema.api_respone import ApiResponse
from ..schema.schema import NameFileInput
from app.core.celery.celery_conn import celery
from app.file_handler.utils.util import get_url_from_minio

router = APIRouter(tags=['File Handler'])


@router.post('/request_download_file', response_model=ApiResponse)
async def request_download_file(data_input: NameFileInput):
    """ This endpoint using for request a signal to process prepare file excel
    This process will be handle by dramatiq and upload file to Minio
    When file upload success will have a signal for user download file (Soon)
    """
    celery.send_task(
        name="process_excel",
        queue="default",
        kwargs={
            "data": {
                "name": data_input.name,
                "type": data_input.type
            }}
    )
    return {
        "data": [{
            "message": f"File {data_input.name} will be process soon",
        }]}


@router.post('/download_file', response_model=ApiResponse)
async def download_file(
    data_input: NameFileInput
):
    """
    This endpoint will be return a url (methods GET) of file requested
    This url was generated by Minio and have expire time 7 days.
    """
    result = await get_url_from_minio(data_input)

    return {
        "data": [result]
    }


@router.get('/download_file')
async def respone_download_file():
    """ Respone exist file in folder server
    url = 'statics/excel/1trieu.xlsx' 
    This file is a excel file include 13 headers and 1.000.000 records
    Time respone is ~ 9s (Test by postman)
    Returns:
        File (bytes): File excel
    """
    url = 'statics/excel/1trieu.xlsx'
    return FileResponse(url, media_type="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", filename="example.xlsx")


@router.get('/test_download_file', response_model=ApiResponse)
async def test_download_file():
    url = 'statics/excel/1trieu.xlsx'
    check_exist = os.path.isfile(url)
    if check_exist:
        return FileResponse(url, media_type="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", filename="example.xlsx")
